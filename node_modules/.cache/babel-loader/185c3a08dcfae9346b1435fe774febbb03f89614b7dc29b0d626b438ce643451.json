{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'./SignupPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordInput=_ref=>{let{label,value,onChange}=_ref;const[show,setShow]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:label}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:show?'text':'password',value:value,onChange:onChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"password-toggle\",onClick:()=>setShow(!show),children:show?'Hide':'Show'})]})]});};const SignupPage=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const navigate=useNavigate();const API_URL=process.env.REACT_APP_API_URL||\"https://intern-backend-yfxc.onrender.com\";const validatePassword=pwd=>{const regex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;return regex.test(pwd);};const handleSubmit=async e=>{e.preventDefault();if(!validatePassword(password)){alert('Password must be at least 8 characters, include uppercase, lowercase, number, and special character.');return;}if(password!==confirmPassword){alert('Passwords do not match');return;}try{const response=await fetch(\"\".concat(API_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();alert(errorData.message||'Signup failed');return;}const data=await response.json();// Optionally store token in localStorage/sessionStorage if returned\n// localStorage.setItem('token', data.token);\nnavigate('/dashboard',{state:{userEmail:email}});}catch(error){console.error('Signup error:',error);alert('Error connecting to server');}};const isFormValid=email&&password&&confirmPassword&&password===confirmPassword&&validatePassword(password);return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signup-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"app-icon\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"48\",height:\"48\",viewBox:\"0 0 24 24\",fill:\"none\",children:[/*#__PURE__*/_jsx(\"rect\",{x:\"3\",y:\"4\",width:\"18\",height:\"16\",rx:\"2\",fill:\"#3b82f6\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M7 8h10M7 12h6\",stroke:\"white\",strokeWidth:\"2\",strokeLinecap:\"round\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"AI Internship Finder\"}),/*#__PURE__*/_jsx(\"p\",{className:\"app-subtitle\",children:\"Create your account to get started.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signup-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-tabs\",children:[/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"auth-tab\",children:\"Sign In\"}),/*#__PURE__*/_jsx(\"button\",{className:\"auth-tab active\",children:\"Create Account\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"signup-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsx(PasswordInput,{label:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(PasswordInput,{label:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)}),confirmPassword&&password!==confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"Passwords do not match\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signup-button\",disabled:!isFormValid,children:\"Create Account\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signin-link\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Already have an account? \"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Sign in\"})]})]})]});};export default SignupPage;","map":{"version":3,"names":["React","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","PasswordInput","_ref","label","value","onChange","show","setShow","className","children","type","required","onClick","SignupPage","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigate","API_URL","process","env","REACT_APP_API_URL","validatePassword","pwd","regex","test","handleSubmit","e","preventDefault","alert","response","fetch","concat","method","headers","body","JSON","stringify","ok","errorData","json","message","data","state","userEmail","error","console","isFormValid","width","height","viewBox","fill","x","y","rx","d","stroke","strokeWidth","strokeLinecap","to","onSubmit","htmlFor","id","placeholder","target","disabled"],"sources":["C:/frontend/internship-frontend/src/components/SignupPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './SignupPage.css';\r\n\r\nconst PasswordInput = ({ label, value, onChange }) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <div className=\"password-input\">\r\n        <input\r\n          type={show ? 'text' : 'password'}\r\n          value={value}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"password-toggle\"\r\n          onClick={() => setShow(!show)}\r\n        >\r\n          {show ? 'Hide' : 'Show'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SignupPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const API_URL = process.env.REACT_APP_API_URL || \"https://intern-backend-yfxc.onrender.com\";\r\n\r\n  const validatePassword = (pwd) => {\r\n    const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\r\n    return regex.test(pwd);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validatePassword(password)) {\r\n      alert('Password must be at least 8 characters, include uppercase, lowercase, number, and special character.');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || 'Signup failed');\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      // Optionally store token in localStorage/sessionStorage if returned\r\n      // localStorage.setItem('token', data.token);\r\n\r\n      navigate('/dashboard', { state: { userEmail: email } });\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      alert('Error connecting to server');\r\n    }\r\n  };\r\n\r\n  const isFormValid =\r\n    email &&\r\n    password &&\r\n    confirmPassword &&\r\n    password === confirmPassword &&\r\n    validatePassword(password);\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-header\">\r\n        <div className=\"app-icon\">\r\n          <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n            <rect x=\"3\" y=\"4\" width=\"18\" height=\"16\" rx=\"2\" fill=\"#3b82f6\"/>\r\n            <path d=\"M7 8h10M7 12h6\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n          </svg>\r\n        </div>\r\n        <h1 className=\"app-title\">AI Internship Finder</h1>\r\n        <p className=\"app-subtitle\">Create your account to get started.</p>\r\n      </div>\r\n\r\n      <div className=\"signup-card\">\r\n        <div className=\"auth-tabs\">\r\n          <Link to=\"/login\" className=\"auth-tab\">Sign In</Link>\r\n          <button className=\"auth-tab active\">Create Account</button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"signup-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <PasswordInput\r\n            label=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n\r\n          {confirmPassword && password !== confirmPassword && (\r\n            <p className=\"error-text\">Passwords do not match</p>\r\n          )}\r\n\r\n          <button type=\"submit\" className=\"signup-button\" disabled={!isFormValid}>\r\n            Create Account\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"signin-link\">\r\n          <span>Already have an account? </span>\r\n          <Link to=\"/login\">Sign in</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}